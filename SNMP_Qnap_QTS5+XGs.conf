# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Collection offset is used to shift the collection by the given amount.
  ## This can be be used to avoid many plugins querying constraint devices
  ## at the same time by manually scheduling them in time.
  # collection_offset = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Collected metrics are rounded to the precision specified. Precision is
  ## specified as an interval with an integer + unit (e.g. 0s, 10ms, 2us, 4s).
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  ##
  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s:
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ##
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  precision = "0s"

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

  ## Method of translating SNMP objects. Can be "netsnmp" (deprecated) which
  ## translates by calling external programs snmptranslate and snmptable,
  ## or "gosmi" which translates using the built-in gosmi library.
   snmp_translator = "netsnmp"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# # Configuration for sending metrics to InfluxDB 2.0
 [[outputs.influxdb_v2]]
#   ## The URLs of the InfluxDB cluster nodes.
#   ##
#   ## Multiple URLs can be specified for a single cluster, only ONE of the
#   ## urls will be written to each interval.
   urls = ["http://192.168.11.111:8086"]
#
#   ## Token for authentication.
   token = "e-KKns4YgCLG5KhM-SgDjxruzzn_3n_o9a2Js4yMEAIdidwhT-LdxYHtqbvqYJHq_izXPo4HSSGL12CJGr47bA=="
#
#   ## Organization is the name of the organization you wish to write to.
   organization = "Init_Orga"
#
#   ## Destination bucket to write into.
   bucket = "SNMP"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.snmp]]
   # List of agents to poll
   agents = [ "10.11.30.251","192.168.13.25" ]
   # Polling interval
   interval = "90s"
   # Timeout for each SNMP query.
   timeout = "60s"
   # Number of retries to attempt within timeout.
   retries = 3
   # The GETBULK max-repetitions parameter
   max_repetitions = 10
   # Measurement name
   name = "snmp.QNAP"
   #SNMPv3
   version = 3
   sec_name = "Grafana"
   auth_protocol = "SHA"
   auth_password = "9V2oNHe5excqb9aY"
   sec_level = "authPriv"
   priv_protocol = "DES"
   priv_password = "YOUROTHERPASS"


  ##
  ## System Details & Metrics
  ##
  # CPU
  [[inputs.snmp.field]]
  name = "name"
  oid = "NAS-MIB::enclosureName.1"
  is_tag = true

  [[inputs.snmp.table]]
    name = "snmp.QNAP.cpuTable"
    oid = "NAS-MIB::cpuTable"
    [[inputs.snmp.table.field]]
      name = "cpuIndex"
      oid = "NAS-MIB::cpuIndex"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "cpuID"
      oid = "NAS-MIB::cpuID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "cpuUsage"
      oid = "NAS-MIB::cpuUsage"

  #  System
  #  Enclosures
  [[inputs.snmp.table]]
    name = "snmp.QNAP.systemTable"
  # Memory
  [[inputs.snmp.table.field]]
    name = "systemTotalMemEX"
    oid = "NAS-MIB::systemTotalMemEX"
  [[inputs.snmp.table.field]]
    name = "systemFreeMemEX"
    oid = "NAS-MIB::systemFreeMemEX"
  # System temp
  [[inputs.snmp.table.field]]
    name = "cpu-TemperatureEX"
    oid = "NAS-MIB::cpu-TemperatureEX"
  [[inputs.snmp.table.field]]
    name = "systemTemperatureEX"
    oid = "NAS-MIB::systemTemperatureEX"
  # Uptime
  [[inputs.snmp.table.field]]
    name = "systemUptime"
    oid = "NAS-MIB::systemUptimeEX"
  # Uptime
  [[inputs.snmp.table.field]]
    name = "systemCPU-UsageEX"
    oid = "NAS-MIB::systemCPU-UsageEX"

  #  Enclosures
  [[inputs.snmp.table]]
    name = "snmp.QNAP.enclosureTable"
    oid = "NAS-MIB::enclosureTable"
    # Memory
    [[inputs.snmp.table.field]]
      name = "enclosureID"
      oid = "NAS-MIB::enclosureID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "enclosureModel"
      oid = "NAS-MIB::enclosureModel"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "enclosureName"
      oid = "NAS-MIB::enclosureName"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "enclosureSystemTemp"
      oid = "NAS-MIB::enclosureSystemTemp"

  #  Fan
  [[inputs.snmp.table]]
    name = "snmp.QNAP.systemFanTableEx"
    oid = "NAS-MIB::systemFanTableEx"
    [[inputs.snmp.table.field]]
      name = "sysFanIndexEX"
      oid = "NAS-MIB::sysFanIndexEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "sysFanDescrEX"
      oid = "NAS-MIB::sysFanDescrEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "sysFanSpeedEX"
      oid = "NAS-MIB::sysFanSpeedEX"

  #  Power
  [[inputs.snmp.table]]
    name = "snmp.QNAP.systemPowerTable"
    oid = "NAS-MIB::systemPowerTable"
    [[inputs.snmp.table.field]]
      name = "systemPowerIndex"
      oid = "NAS-MIB::systemPowerIndex"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "systemPowerID"
      oid = "NAS-MIB::systemPowerID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "systemPowerEnclosureID"
      oid = "NAS-MIB::systemPowerEnclosureID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "systemPowerStatus"
      oid = "NAS-MIB::systemPowerStatus"
    [[inputs.snmp.table.field]]
      name = "systemPowerFanSpeed"
      oid = "NAS-MIB::systemPowerFanSpeed"
    [[inputs.snmp.table.field]]
      name = "systemPowerFanSpeed"
      oid = "NAS-MIB::systemPowerFanSpeed"
    [[inputs.snmp.table.field]]
      name = "systemPowerTemp"
      oid = "NAS-MIB::systemPowerTemp"

  #  Interfaces
  [[inputs.snmp.table]]
    name = "snmp.QNAP.systemIfTableEx"
    oid = "NAS-MIB::systemIfTableEx"
    [[inputs.snmp.table.field]]
      name = "ifIndexEX"
      oid = "NAS-MIB::ifIndexEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "ifDescrEX"
      oid = "NAS-MIB::ifDescrEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "ifPacketsReceivedEX"
      oid = "NAS-MIB::ifPacketsReceivedEX"
    [[inputs.snmp.table.field]]
      name = "ifPacketsSentEX"
      oid = "NAS-MIB::ifPacketsSentEX"
    [[inputs.snmp.table.field]]
      name = "ifErrorPacketsEX"
      oid = "NAS-MIB::ifErrorPacketsEX"

  #  Interfaces
  [[inputs.snmp.table]]
    name = "snmp.QNAP.ifXTable"
    oid = "IF-MIB::ifXTable"
    [[inputs.snmp.table.field]]
      name = "ifName"
      oid = "IF-MIB::ifName"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "ifHCInOctets"
      oid = "IF-MIB::ifHCInOctets"
    [[inputs.snmp.table.field]]
      name = "ifHCOutOctets"
      oid = "IF-MIB::ifHCOutOctets"

  ##
  ## Disk Details & Metrics
  ##
  #  Disk
  [[inputs.snmp.table]]
    name = "snmp.QNAP.diskTable"
    oid = "NAS-MIB::diskTable"
    [[inputs.snmp.table.field]]
      name = "diskIndex"
      oid = "NAS-MIB::diskIndex"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "diskID"
      oid = "NAS-MIB::diskID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "diskEnclosureID"
      oid = "NAS-MIB::diskEnclosureID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "diskSummary"
      oid = "NAS-MIB::diskSummary"
    [[inputs.snmp.table.field]]
      name = "diskTemperture"
      oid = "NAS-MIB::diskTemperture"
    [[inputs.snmp.table.field]]
      name = "diskSmartInfo"
      oid = "NAS-MIB::diskSmartInfo"
    [[inputs.snmp.table.field]]
      name = "diskGlobalSpare"
      oid = "NAS-MIB::diskGlobalSpare"
    [[inputs.snmp.table.field]]
      name = "diskModel"
      oid = "NAS-MIB::diskModel"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "diskCapacity"
      oid = "NAS-MIB::diskCapacity"
      is_tag = true

  ##
  ## Volume Details & Metrics
  ##
  #  Volumes
  [[inputs.snmp.table]]
    name = "snmp.QNAP.systemVolumeTableEx"
    oid = "NAS-MIB::systemVolumeTableEx"
    [[inputs.snmp.table.field]]
      name = "sysVolumeIndexEX"
      oid = "NAS-MIB::sysVolumeIndexEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "sysVolumeDescrEX"
      oid = "NAS-MIB::sysVolumeDescrEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "sysVolumeFSEX"
      oid = "NAS-MIB::sysVolumeFSEX"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "sysVolumeTotalSizeEX"
      oid = "NAS-MIB::sysVolumeTotalSize"
    [[inputs.snmp.table.field]]
      name = "sysVolumeFreeSize"
      oid = "NAS-MIB::sysVolumeFreeSizeEX"
    [[inputs.snmp.table.field]]
      name = "sysVolumeStatus"
      oid = "NAS-MIB::sysVolumeStatusEX"

  ##
  ## Disk Performance Details & Metrics
  ##
  #  Disk Performance
  [[inputs.snmp.table]]
    name = "snmp.QNAP.diskPerformanceTable"
    oid = "NAS-MIB::diskPerformanceTable"
    [[inputs.snmp.table.field]]
      name = "diskPerformanceIndex"
      oid = "NAS-MIB::diskPerformanceIndex"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "blvID"
      oid = "NAS-MIB::blvID"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "iops"
      oid = "NAS-MIB::iops"
    [[inputs.snmp.table.field]]
      name = "latency"
      oid = "NAS-MIB::latency"

  #  JBOD
  [[inputs.snmp.table]]
    name = "snmp.QNAP.jBODHdTable1"
    oid = "NAS-MIB::jBODHdTable1"
    [[inputs.snmp.table.field]]
      name = "jBODHdIndex1"
      oid = "NAS-MIB::jBODHdIndex1"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "jBODHdDescr1"
      oid = "NAS-MIB::jBODHdDescr1"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "jBODHdTemperature1"
      oid = "NAS-MIB::sysVolumeFSEX"
    [[inputs.snmp.table.field]]
      name = "jBODHdStatus1"
      oid = "NAS-MIB::jBODHdStatus1"
    [[inputs.snmp.table.field]]
      name = "jBODHdModel1"
      oid = "NAS-MIB::jBODHdModel1"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "jBODHdCapacity1 "
      oid = "NAS-MIB::jBODHdCapacity1"
    [[inputs.snmp.table.field]]
      name = "jBODHdSmartInfo1"
      oid = "NAS-MIB::jBODHdSmartInfo1"
	  
	  
	  


[[inputs.snmp]]
   # List of agents to poll
   agents = [ "192.168.11.1" ]
   # Polling interval
   interval = "90s"
   # Timeout for each SNMP query.
   timeout = "60s"
   # Number of retries to attempt within timeout.
   retries = 3
   # The GETBULK max-repetitions parameter
   max_repetitions = 10
   # Measurement name
   name = "snmp.XGs"
   #SNMPv3
   version = 3
   sec_name = "Grafana"
   auth_protocol = "SHA512"
   auth_password = "VduMNW*ecK9%Q4f7@PrXC"
   sec_level = "authPriv"
   priv_protocol = "DES"
   priv_password = "dw4$ii^Wc%6uWM26Y3YFh"
	
	[[inputs.snmp.field]]
	name = "contact"
	oid = "SNMPv2-MIB::sysContact.0"
	[[inputs.snmp.field]]
	name = "description"
	oid = "SNMPv2-MIB::sysDescr.0"
	[[inputs.snmp.field]]
	name = "deviceType"
	oid = "SFOS-FIREWALL-MIB::sfosDeviceType.0"
	[[inputs.snmp.field]]
	name = "diskCapacity"
	oid = "SFOS-FIREWALL-MIB::sfosDiskCapacity.0"
	[[inputs.snmp.field]]
	name = "diskPercentUsage"
	oid = "SFOS-FIREWALL-MIB::sfosDiskPercentUsage.0"
	[[inputs.snmp.field]]
	name = "fwVersion"
	oid = "SFOS-FIREWALL-MIB::sfosDeviceFWVersion.0"	
	[[inputs.snmp.field]]
	name = "host"
	oid = "SFOS-FIREWALL-MIB::sfosDeviceName.0"	
	is_tag = true
	[[inputs.snmp.field]]
	name = "licenseBaseFWStatus"
	oid = "SFOS-FIREWALL-MIB::sfosBaseFWLicRegStatus.0"
	[[inputs.snmp.field]]
	name = "licenseBaseFWExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosBaseFWLicExpiryDate.0"	
	[[inputs.snmp.field]]
	name = "licenseNetProtectionStatus"
	oid = "SFOS-FIREWALL-MIB::sfosNetProtectionLicRegStatus.0"
	[[inputs.snmp.field]]
	name = "licenseNetProtectionExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosNetProtectionLicExpiryDate.0"
	[[inputs.snmp.field]]
	name = "licenseWebProtectionStatus"
	oid = "SFOS-FIREWALL-MIB::sfosWebProtectionLicRegStatus.0"	
	[[inputs.snmp.field]]
	name = "licenseWebProtectionExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosWebProtectionLicExpiryDate.0"
	[[inputs.snmp.field]]
	name = "licenseMailProtectionStatus"
	oid = "SFOS-FIREWALL-MIB::sfosMailProtectionLicRegStatus.0"
	[[inputs.snmp.field]]
	name = "licenseMailProtectionExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosMailProtectionLicExpiryDate.0"	
	[[inputs.snmp.field]]
	name = "licenseWebServerProtectionStatus"
	oid = "SFOS-FIREWALL-MIB::sfosWebServerProtectionLicRegStatus.0"	
	[[inputs.snmp.field]]
	name = "licenseWebServerProtectionExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosWebServerProtectionLicExpiryDate.0"	
	[[inputs.snmp.field]]
	name = "licenseSandstromProtectionStatus"
	oid = "SFOS-FIREWALL-MIB::sfosSandstromLicRegStatus.0"		
	[[inputs.snmp.field]]
	name = "licenseSandstromProtectionExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosSandstromLicExpiryDate.0"	
	[[inputs.snmp.field]]
	name = "licenseEnhancedSupportStatus"
	oid = "SFOS-FIREWALL-MIB::sfosEnhancedSupportLicRegStatus.0"
	[[inputs.snmp.field]]
	name = "licenseEnhancedSupportExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosEnhancedSupportLicExpiryDate.0"	
	[[inputs.snmp.field]]
	name = "licenseEnhancedSupportPlusStatus"
	oid = "SFOS-FIREWALL-MIB::sfosEnhancedPlusLicRegStatus.0"	
	[[inputs.snmp.field]]
	name = "licenseCentralOrchestrationStatus"
	oid = "SFOS-FIREWALL-MIB::sfosCentralOrchestrationLicRegStatus.0"	
	[[inputs.snmp.field]]
	name = "licenseCentralOrchestrationExpiry"
	oid = "SFOS-FIREWALL-MIB::sfosCentralOrchestrationLicExpiryDate.0"		
	[[inputs.snmp.field]]
	name = "memoryCapacity"
	oid = "SFOS-FIREWALL-MIB::sfosMemoryCapacity.0"
	[[inputs.snmp.field]]
	name = "memoryPercentUsage"
	oid = "SFOS-FIREWALL-MIB::sfosMemoryPercentUsage.0"
	[[inputs.snmp.field]]
	name = "serviceApache"
	oid = "SFOS-FIREWALL-MIB::sfosApacheService.0"
	[[inputs.snmp.field]]
	name = "serviceAS"
	oid = "SFOS-FIREWALL-MIB::sfosASService.0"
	[[inputs.snmp.field]]
	name = "serviceAV"
	oid = "SFOS-FIREWALL-MIB::sfosAVService.0"
	[[inputs.snmp.field]]
	name = "serviceDatabase"
	oid = "SFOS-FIREWALL-MIB::sfosDatabaseservice.0"	
	[[inputs.snmp.field]]
	name = "serviceDGD"
	oid = "SFOS-FIREWALL-MIB::sfosDgdService.0"	
	[[inputs.snmp.field]]
	name = "serviceDNS"
	oid = "SFOS-FIREWALL-MIB::sfosDNSService.0"	
	[[inputs.snmp.field]]
	name = "serviceDRouting"
	oid = "SFOS-FIREWALL-MIB::sfosDroutingService.0"
	[[inputs.snmp.field]]
	name = "serviceFTP"
	oid = "SFOS-FIREWALL-MIB::sfosFtpService.0"			
	[[inputs.snmp.field]]
	name = "serviceGarner"
	oid = "SFOS-FIREWALL-MIB::sfosGarnerService.0"		
	[[inputs.snmp.field]]
	name = "serviceHA"
	oid = "SFOS-FIREWALL-MIB::sfosHAService.0"
	[[inputs.snmp.field]]
	name = "serviceHTTP"
	oid = "SFOS-FIREWALL-MIB::sfosHttpService.0"	
	[[inputs.snmp.field]]
	name = "serviceIMAP4"
	oid = "SFOS-FIREWALL-MIB::sfosImap4Service.0"	
	[[inputs.snmp.field]]
	name = "serviceIPS"
	oid = "SFOS-FIREWALL-MIB::sfosIPSService.0"
	[[inputs.snmp.field]]
	name = "serviceIPSec"
	oid = "SFOS-FIREWALL-MIB::sfosIPSecVpnService.0"			
	[[inputs.snmp.field]]
	name = "serviceNetwork"
	oid = "SFOS-FIREWALL-MIB::sfosNetworkService.0"
	[[inputs.snmp.field]]
	name = "serviceNTP"
	oid = "SFOS-FIREWALL-MIB::sfosNtpService.0"		
	[[inputs.snmp.field]]
	name = "servicePOP3"
	oid = "SFOS-FIREWALL-MIB::sfosPoP3Service.0"
	[[inputs.snmp.field]]
	name = "serviceSSHd"
	oid = "SFOS-FIREWALL-MIB::sfosSSHdService.0"
	[[inputs.snmp.field]]
	name = "serviceSSLVPN"
	oid = "SFOS-FIREWALL-MIB::sfosSSLVpnService.0"
	[[inputs.snmp.field]]
	name = "serviceTomcat"
	oid = "SFOS-FIREWALL-MIB::sfosTomcatService.0"
	[[inputs.snmp.field]]
	name = "swapCapacity"
	oid = "SFOS-FIREWALL-MIB::sfosSwapCapacity.0"	
	[[inputs.snmp.field]]
	name = "swapPercentUsage"
	oid = "SFOS-FIREWALL-MIB::sfosSwapPercentUsage.0"	
	[[inputs.snmp.field]]
	name = "uptime"
	oid = "SFOS-FIREWALL-MIB::sfosUpTime.0"			
	[[inputs.snmp.table]]
	name = "sophos.xg.ifTable"
    oid = "IF-MIB::ifTable"
	index_as_tag = true
	inherit_tags = [ "host" ]
		[[inputs.snmp.table.field]]
        oid = "IF-MIB::ifDescr"
        is_tag = true
	[[inputs.snmp.table]]
	name = "sophos.xg.ifXTable"
    oid = "IF-MIB::ifXTable"
	index_as_tag = true
	inherit_tags = [ "host" ]
		[[inputs.snmp.table.field]]
        oid = "IF-MIB::ifName"
        is_tag = true
	[[inputs.snmp.table]]
	name = "sophos.xg.ipAddrTable"
    oid = "IP-MIB::ipAddrTable"
	inherit_tags = [ "host" ]
		[[inputs.snmp.table.field]]
        oid = "IP-MIB::ipAdEntIfIndex"
        is_tag = true
	[[inputs.snmp.table]]
	name = "sophos.xg.vpnIpsecTable"
    oid = "SFOS-FIREWALL-MIB::sfosIPSecVpnTunnelTable"
	inherit_tags = [ "host" ]
	index_as_tag = true
		[[inputs.snmp.table.field]]
        oid = "SFOS-FIREWALL-MIB::sfosIPSecVpnConnName"
        is_tag = true
		[[inputs.snmp.table.field]]
        oid = "SFOS-FIREWALL-MIB::sfosIPSecVpnConnType"
        is_tag = true
		[[inputs.snmp.table.field]]
        oid = "SFOS-FIREWALL-MIB::sfosIPSecVpnActivated"
        is_tag = true
	[[inputs.snmp.table]]
	name = "sophos.xg.processorTable"
    oid = "HOST-RESOURCES-MIB::hrProcessorTable"
	inherit_tags = [ "host" ]
	index_as_tag = true

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	